// <auto-generated />
using System;
using EstacionamentoCode.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstacionamentoCode.Mvc.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Estacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoHora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtdeVagasTotais")
                        .HasColumnType("int");

                    b.Property<int>("Tolerancia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estacionamentos");
                });

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstacionamentoId")
                        .HasColumnType("int");

                    b.Property<int>("HoraEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("HoraSaida")
                        .HasColumnType("int");

                    b.Property<bool>("Ocupada")
                        .HasColumnType("bit");

                    b.Property<int?>("TempoEstacionado")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamentoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Vaga");
                });

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeVeiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Vaga", b =>
                {
                    b.HasOne("EstacionamentoCode.Dominio.Models.Estacionamento", "Estacionamento")
                        .WithMany("Vagas")
                        .HasForeignKey("EstacionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstacionamentoCode.Dominio.Models.Veiculo", "Veiculo")
                        .WithMany("Vagas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacionamento");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Estacionamento", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("EstacionamentoCode.Dominio.Models.Veiculo", b =>
                {
                    b.Navigation("Vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
